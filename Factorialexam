#include <stdio.h>
#include <stdlib.h>
#include <mpi.h>

// Function to calculate factorial
double factorial(int n) {
    double fact = 1.0;
    for (int i = 2; i <= n; i++)
        fact *= i;
    return fact;
}

int main(int argc, char *argv[]) {
    int rank, size, N;
    double local_sum = 0.0, global_sum = 0.0;

    MPI_Init(&argc, &argv);                 // Initialize MPI
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);   // Get current process rank
    MPI_Comm_size(MPI_COMM_WORLD, &size);   // Get total number of processes

    if (rank == 0) {
        printf("Enter value of N: ");
        scanf("%d", &N);
    }

    // Broadcast value of N to all processes
    MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);

    // Each process computes its part
    for (int i = rank + 1; i <= N; i += size) {
        local_sum += 1.0 / factorial(i);
    }

    // Reduce all local sums to global sum at root
    MPI_Reduce(&local_sum, &global_sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);

    if (rank == 0) {
        printf("Sum of the series 1/1! + 1/2! + ... + 1/%d! = %lf\n", N, global_sum);
    }

    MPI_Finalize(); // Finalize MPI
    return 0;
}
